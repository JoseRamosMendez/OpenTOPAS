name: CI

# Make workflow manually triggerable
on:
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'
  push:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    # Check out the repository code
    - uses: actions/checkout@v3
    
    # Install necessary system dependencies
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt install -y cmake \
                            libexpat1-dev \
                            libgl1-mesa-dev \
                            libglu1-mesa-dev \
                            libxt-dev \
                            xorg-dev \
                            build-essential \
                            libharfbuzz-dev \
                            qtbase5-dev \
                            qtchooser \
                            qt5-qmake \
                            qtbase5-dev-tools

    # Set up Qt framework
    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'

    - name: Cache Geant4 data
      uses: actions/cache@v3
      id: cache-data
      with:
        path: ~/geant4-data
        key: ${{ runner.os }}-geant4-data-v11.1.3-${{ hashFiles('.github/workflows/g4data_urls.txt') }}
        restore-keys: |
          ${{ runner.os }}-geant4-data-v11.1.3-

    - name: Download Geant4 data
      if: steps.cache-data.outputs.cache-hit != 'true'
      run: |
        mkdir -p ~/geant4-data
        cd ~/geant4-data
        while read url; do
          wget "$url"
        done < $GITHUB_WORKSPACE/.github/workflows/g4data_urls.txt
        for file in *.tar.gz; do
          tar -xzf "$file"
          rm "$file"
        done

    - name: Clone Geant4
      run: |
        cd ~
        git clone https://github.com/Geant4/geant4 --branch v11.1.3

    - name: Install Geant4
      run: |
        cd ~
        mkdir geant4-build && cd geant4-build
        cmake ../geant4 -DGEANT4_INSTALL_DATA=OFF \
                        -DGEANT4_BUILD_MULTITHREADED=ON \
                        -DCMAKE_PREFIX_PATH=/usr/lib/qt5 \
                        -DGEANT4_USE_QT=ON \
                        -DGEANT4_USE_OPENGL_X11=ON \
                        -DGEANT4_USE_RAYTRACER_X11=ON \
                        -DCMAKE_INSTALL_PREFIX=~/geant4-install
        make -j$(nproc) install

    - name: Compile GDCM
      run: |
        cp gdcm-2.6.8.tar.gz ~/
        cd ~
        tar -zxf gdcm-2.6.8.tar.gz
        mkdir gdcm-{build,install}
        cd gdcm-build
        cmake ../gdcm-2.6.8 -DGDCM_BUILD_SHARED_LIBS=ON\
                            -DGDCM_BUILD_DOCBOOK_MANPAGES:BOOL=OFF\
                            -DCMAKE_INSTALL_PREFIX=../gdcm-install 
        make -j$(nproc) install

    - name: Compile TOPAS and add to PATH
      run: |
        cd ~
        mkdir OpenTOPAS-{build,install}
        cd OpenTOPAS-build
        export Geant4_DIR=~/geant4-install/
        export GDCM_DIR=~/gdcm-install/
        cmake $GITHUB_WORKSPACE -DCMAKE_INSTALL_PREFIX=../OpenTOPAS-install
        make -j$(nproc) install
        echo "~/OpenTOPAS-install/bin/" >> $GITHUB_PATH

    # Install nrtest and nrtest-topas
    - name: Install nrtest and nrtest-topas
      run: |
        pip3 install nrtest
        pip3 install git+https://github.com/davidchall/nrtest-topas.git

    # Clone qi-test and add test configuration file
    - name: Clone qi-test and add configuration file
      run: |
        cd ~
        git clone https://github.com/OpenTOPAS/qi-opentopas.git
        cp $GITHUB_WORKSPACE/.github/workflows/qi-topas-v4.0.json ~/qi-opentopas/apps/

    # Run nrtest
    - name: Run nrtest
      run: |
        cd ~/qi-opentopas
        TODAY=$(date +%Y-%m-%d)
        echo "Current directory: $(pwd)"
        echo "Contents of current directory:"
        ls -la
        echo "Contents of apps directory:"
        ls -la apps/
        echo "Contents of tests directory:"
        ls -la tests/
        echo "Which topas: $(which topas)"
        echo "GITHUB_PATH: $GITHUB_PATH"
        echo "PATH: $PATH"
        echo "Running nrtest..."
        nrtest execute apps/qi-topas-v4.0.json tests/ -o benchmark/$TODAY

    - name: Upload test results
      uses: actions/upload-artifact@v3
      with:
        name: nrtest-results
        path: ~/qi-opentopas/benchmark/$TODAY
